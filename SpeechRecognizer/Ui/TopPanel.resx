<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gsaDRIGRmPQdgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQgSURBVHhe
        7ds7r0xhFAbgI0QktEKhUWp1EpVrpRKNRkKlU/oBGpffoPIDhIJEoqBRSXQoNAoSncSlcFvPOOvkOztj
        5szsy2w+b/Lm7Ota6/1m7++y1j5rA2B38EzwSvBG8E7wcfBl8OM6bTvmnGtc6x73/pXYG7wYvBf8Evy5
        JN3LBltsjho7g5eDT4Pfg00xP4Ifgi+CD4O3g9fWaftB0DnXuLZ5P5tPgnzwNRpsC54Pvgk2g34dvBk8
        GlwkaNe6x71sNO3yxSffK8Wp4PNgGZz9q8FDwa7AFpvTfIlhcBwIPgqWwbwKng32DT74Kn2LRUyD4Ejw
        XTCdvw96L3cEhwJffPKdcYhJbL3iQvBrkEMd1fXgnuCqwLcYstMUmxg7x/bgrWC29qfgueBYIBYxZXxi
        FXMnYOhuMI2/DR4Ojg1iElvGKeZOGqH85Z8F9wfHCrGJMeMVeyt4n0rxu4JjhxjLRli6T9CjZofn0Rrz
        L9+EWPN1oGHh0cGYmkOdzmWM7/w8iDk7RloWmifkJMfwMqbeflGIPYdImrYEU0s3oDH2bwcNqWfutNni
        IufbZlmrnOR0BRpyxkjbzAWUFVa2lqnmvwJaUheNU2EJmktai40h5/Z9g5ZcQNE4dWletlKbVd3B4L7f
        m52CTbaXBU2pb+rTLZPjpPdkWQjwW9Dwc8yBjsAWm2y3aYTs32jdBPm2TGNJPCwLv1KOvZ+Dx4NtwQZb
        bLLd5umijR1aN+UYLwWdwLaZHL9WBty2EUrx/rZ9qmhLnTRv4H7QQfm3LtAM/ERwUbintNHF0wSZY6R5
        Arn3TF1LQnaFNo3Ql3igkV2aJ3UHBQgHUCa2SzSFnAzOg2vKe5Z5emaBxtRL+6QKY8ecuY98e9kIWn1W
        IziXT2Mf4oHGXB/QPilF2VGQ6AulMH+nzckdK6+Z1VBtQSs/tE/qcXZUZfpEsxFOBxO2hxIPtPJF+6Qo
        aUe5qm80f2XCm+Lnrtg6gDIcf7RPKrN21OeGQFNwuV0+FX2CVj5pn5Sn7ShSDoWyEYYWD7TyS/v/Bqj+
        Fai+E6x+GKx+IlT9VLj6xVD1y2GoOiEC1afEqk+KQtVpcai+MGJ8rLo0BlUXR6H68jiYk2drVfeBRKLq
        T2Sg+o+koOrP5BJVfyiZqPpTWaj+Y2lgqHwSdC5jGh3Ekh0eirUz8SW8T9kxGl6MsaucLPEthhzqxNb6
        nZ8HPWoOkWiWZao55NqBLz5zhodiWrq3XxTG1JwsJS022qwitwo+cmGTFMvC43wXMLXMtUPSvsRD28xS
        CbbYnOZry9PbvmBxYYWVS+mS8m+SkDKxi6TcXese92YOryRffM5d2AwJQXsvq/vX2WmQb6vun6f/BLl3
        BQhVGKUo9ThFSZVZ5Wm07ZhzrnGtezby9v1gbe0XmPJxYbRxLZ4AAAAASUVORK5CYII=
</value>
  </data>
</root>